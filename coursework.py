# -*- coding: utf-8 -*-
"""Coursework.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zGxRFntpKNPI3tFsBP2SfYCQFwWHre6z

**First task**
"""

import random
import math
import matplotlib.pyplot as plt


_lambda = int(input("Lambda: "))
time_units = int(input("Number of time units: "))

_event_num = []
_inter_event_times = []
_event_times = []
_event_time = 0
t = 0
i = 1

print('Number of event' + '  |      ' + 'Event time' + '      |   ' + 'Absolute event time')

while t < time_units:
  n = random.random()
  _inter_event_time = -math.log(1.0 - n) / _lambda
  t = t + _inter_event_time
  if t > time_units:
    break
  else:
    _event_num.append(i)
    _inter_event_times.append(_inter_event_time)
    _event_time = _event_time + _inter_event_time
    _event_times.append(_event_time)
    print('      ' + str(i)[:16] +'               ' + str(_inter_event_time)[:16] + '           ' + str(_event_time))
    i = i + 1

fig = plt.figure()
fig.suptitle('Times between consecutive events')
plot, = plt.plot(_event_num, _inter_event_times, 'bo-', label='Inter-event time')
plt.legend(handles=[plot])
plt.xlabel('Index of event')
plt.ylabel('Time')
plt.show()

fig = plt.figure()
fig.suptitle('Absolute times of consecutive events')
plot, = plt.plot(_event_num, _event_times, 'bo-', label='Absolute time of event')
plt.legend(handles=[plot])
plt.xlabel('Index of event')
plt.ylabel('Time')
plt.show()

_interval_nums = []
_num_events_in_interval = []
_interval_num = 1
_num_events = 0

print('Interval number  |   Number of events in interval')

for i in range(len(_event_times)):
	_event_time = _event_times[i]
	if _event_time <= _interval_num:
		_num_events += 1
	else:
		_interval_nums.append(_interval_num)
		_num_events_in_interval.append(_num_events)
		print('        ' + str(_interval_num) +'                         ' + str(_num_events))
		_interval_num += 1
		_num_events = 1

fig = plt.figure()
fig.suptitle('Number of events occurring in consecutive intervals')
plt.bar(_interval_nums, _num_events_in_interval)
plt.xlabel('Index of interval')
plt.ylabel('Number of events')
plt.show()

"""**Second task**"""

import random
import math
import matplotlib.pyplot as plt
from random import randint

_lambda = 5
i = 1
t = 0
_event_num = []
_inter_event_times = []
_event_times = []
_event_time = 0
fans_quantity = []

print('Number of event' + '   |   ' + 'Time diff between consecutive events' + '   |   ' + 'Absolute event time' + '   |   ' + 'Quantity of fans')

while t < 1:
  n = random.random()
  _inter_event_time = -math.log(1.0 - n) / _lambda
  t = t + _inter_event_time
  if t > 1:
    break
  else:
    _event_num.append(i)
    fans = randint(20, 40)
    fans_quantity.append(fans)
    _inter_event_times.append(_inter_event_time)
    _event_time = _event_time + _inter_event_time
    _event_times.append(_event_time)
    print('      ' + str(i)[:16] +'                       ' + str(_inter_event_time)[:16] + '                     ' + str(_event_time) + '                 ' + str(fans))
    i = i + 1

fig = plt.figure()
fig.suptitle('Times between consecutive events')
plot, = plt.plot(_event_num, _inter_event_times, 'bo-', label='Inter-event time')
plt.legend(handles=[plot])
plt.xlabel('Index of event')
plt.ylabel('Time')
plt.show()

fig = plt.figure()
fig.suptitle('Absolute times of consecutive events')
plot, = plt.plot(_event_num, _event_times, 'bo-', label='Absolute time of event')
plt.legend(handles=[plot])
plt.xlabel('Index of event')
plt.ylabel('Time')
plt.show()

print('Total quantity of fans: ', sum(fans_quantity))

"""**Third task**"""

import random
import math
import matplotlib.pyplot as plt

_event_num = []
_inter_event_times = []
_event_times = []
_event_time = 0
i = 1

_lambda = int(input("Lambda(should be 7 or higher): "))
time_units = 10

print('Number of event' + '   |   ' + 'Time diff between consecutive events' + '   |   ' + 'Absolute event time')

while _event_time < time_units:
  n = random.random()
  _inter_event_time = -math.log(1.0 - n) / _lambda
  _event_time = _event_time + _inter_event_time
  if _event_time > time_units:
    break
  else:
    u = random.random()
    func = 3 + (4/(_event_time + 1))
    if u <= func:
      _event_num.append(i)
      _inter_event_times.append(_inter_event_time)
      _event_times.append(_event_time)
      print('      ' + str(i)[:16] +'                       ' + str(_inter_event_time)[:16] + '                     ' + str(_event_time))
      i = i + 1

fig = plt.figure()
fig.suptitle('Times between consecutive events')
plot, = plt.plot(_event_num, _inter_event_times, 'bo-', label='Inter-event time')
plt.legend(handles=[plot])
plt.xlabel('Index of event')
plt.ylabel('Time')
plt.show()

fig = plt.figure()
fig.suptitle('Absolute times of consecutive events')
plot, = plt.plot(_event_num, _event_times, 'bo-', label='Absolute time of event')
plt.legend(handles=[plot])
plt.xlabel('Index of event')
plt.ylabel('Time')
plt.show()

_interval_nums = []
_num_events_in_interval = []
_interval_num = 1
_num_events = 0

print('Interval number  |   Number of events in interval')

for i in range(len(_event_times)):
	_event_time = _event_times[i]
	if _event_time <= _interval_num:
		_num_events += 1
	else:
		_interval_nums.append(_interval_num)
		_num_events_in_interval.append(_num_events)
		print('        ' + str(_interval_num) +'                         ' + str(_num_events))
		_interval_num += 1
		_num_events = 1

fig = plt.figure()
fig.suptitle('Number of events occurring in consecutive intervals')
plt.bar(_interval_nums, _num_events_in_interval)
plt.xlabel('Index of interval')
plt.ylabel('Number of events')
plt.show()

"""**Fourth task**"""

import random
import math
import matplotlib.pyplot as plt

_event_num = []
_inter_event_times = []
_event_times = []
_event_time = 0
time_units = 10
i = 1

_lambda = int(input("Lambda(should be 26 or higher): "))

print('Number of event' + '   |   ' + 'Time diff between consecutive events' + '   |   ' + 'Absolute event time')

while _event_time < time_units:
  n = random.random()
  _inter_event_time = -math.log(1.0 - n) / _lambda
  _event_time = _event_time + _inter_event_time
  if 0 < _event_time < 5 :
    func = _event_time/5
    u = random.random()
    if u <= func:
      _event_num.append(i)
      _inter_event_times.append(_inter_event_time)
      _event_times.append(_event_time)
      print('      ' + str(i)[:16] +'                       ' + str(_inter_event_time)[:16] + '                     ' + str(_event_time))
      i = i + 1 
  elif 5 < _event_time < 10 :
    func = 1 + 5*(_event_time - 5)
    u = random.random()
    if u <= func:
      _event_num.append(i + 1)
      _inter_event_times.append(_inter_event_time)
      _event_times.append(_event_time)
      print('      ' + str(i)[:16] +'                       ' + str(_inter_event_time)[:16] + '                     ' + str(_event_time))
      i = i + 1

fig = plt.figure()
fig.suptitle('Times between consecutive events')
plot, = plt.plot(_event_num, _inter_event_times, 'bo-', label='Inter-event time')
plt.legend(handles=[plot])
plt.xlabel('Index of event')
plt.ylabel('Time')
plt.show()

fig = plt.figure()
fig.suptitle('Absolute times of consecutive events')
plot, = plt.plot(_event_num, _event_times, 'bo-', label='Absolute time of event')
plt.legend(handles=[plot])
plt.xlabel('Index of event')
plt.ylabel('Time')
plt.show()

_interval_nums = []
_num_events_in_interval = []
_interval_num = 1
_num_events = 0

print('Interval number  |   Number of events in interval')

for i in range(len(_event_times)):
	_event_time = _event_times[i]
	if _event_time <= _interval_num:
		_num_events += 1
	else:
		_interval_nums.append(_interval_num)
		_num_events_in_interval.append(_num_events)
		print('        ' + str(_interval_num) +'                         ' + str(_num_events))
		_interval_num += 1
		_num_events = 1

fig = plt.figure()
fig.suptitle('Number of events occurring in consecutive intervals')
plt.bar(_interval_nums, _num_events_in_interval)
plt.xlabel('Index of interval')
plt.ylabel('Number of events')
plt.show()